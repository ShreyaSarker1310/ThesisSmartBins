//
// Generated file, do not edit! Created by opp_msgtool 6.0 from src/WasteMessage.msg.
//

#ifndef __WASTEMESSAGE_M_H
#define __WASTEMESSAGE_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class WasteMessage;
/**
 * Class generated from <tt>src/WasteMessage.msg:1</tt> by opp_msgtool.
 * <pre>
 * message WasteMessage
 * {
 *     int binId;
 *     double fillLevel;
 *     double latitude;
 *     double longitude;
 * }
 * </pre>
 */
class WasteMessage : public ::omnetpp::cMessage
{
  protected:
    int binId = 0;
    double fillLevel = 0;
    double latitude = 0;
    double longitude = 0;

  private:
    void copy(const WasteMessage& other);

  protected:
    bool operator==(const WasteMessage&) = delete;

  public:
    WasteMessage(const char *name=nullptr, short kind=0);
    WasteMessage(const WasteMessage& other);
    virtual ~WasteMessage();
    WasteMessage& operator=(const WasteMessage& other);
    virtual WasteMessage *dup() const override {return new WasteMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getBinId() const;
    virtual void setBinId(int binId);

    virtual double getFillLevel() const;
    virtual void setFillLevel(double fillLevel);

    virtual double getLatitude() const;
    virtual void setLatitude(double latitude);

    virtual double getLongitude() const;
    virtual void setLongitude(double longitude);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const WasteMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, WasteMessage& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline WasteMessage *fromAnyPtr(any_ptr ptr) { return check_and_cast<WasteMessage*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __WASTEMESSAGE_M_H

